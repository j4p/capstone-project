library(shiny)
library(tidyverse)

server <- function(input, output, session) {
  
##### 1. Preparing dataset #####
  # Gunakan reactive, karena reactive akan otomatis melakukan caching
  vaccinations_df <- ...({
    ...(message = 'Preparing vaccination dataset', value = 0, { #progress bar
      vaccinations_df <- ...('https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.csv') %>%
        ...(daily_vaccinations) # remove na
    })
  })
  
  covid_df <- ...({
    ...(... = 'Preparing daily covid dataset', value = 0, {
      covid_df <- ...('https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv')
    })
  })
  
  daily_total_cases <- ...({
    covid_df() %>% 
      ...(total_cases) %>%  #drop na
      ...(date) %>%  # group by before summarise
      ...(daily_total_cases = sum(total_cases)) %>% 
      ...(date) %>%  # sort by date
      ...(20)  # get the last 20
  })
  
  latest_covid_df <- ...({
    ...(message = 'Preparing latest covid dataset', value = 0, {
      latest_covid_df <- ...('https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/latest/owid-covid-latest.csv')
    })
  })

##### rendering output #####
  output$total_covid_cases <- ...({
    format(sum(latest_covid_df()$total_cases, na.rm = T), nsmall=0, big.mark=".")
  })
  
  output$total_covid_death <- ...({
    format(sum(latest_covid_df()$total_deaths, na.rm = T), nsmall=0, big.mark=".")
  })
  
  output$sum_people_fully_vaccinated <- ...({
    x <- vaccinations_df() %>% 
      ...(people_fully_vaccinated) %>%  # drop na
      ...(location) %>%   # group by
      ...(date == max(date)) %>%  # get last date only
      ...(sum_people_fully_vaccinated = sum(people_fully_vaccinated)) %>%  # summarize
      ...(sum_people_fully_vaccinated = sum(sum_people_fully_vaccinated)) # get total sum for all
      
    format(x$sum_people_fully_vaccinated, nsmall=0, big.mark=".")
  })
  
  output$sum_total_vaccinations <- renderText({
    x <- vaccinations_df() %>% 
      ...(total_vaccinations) %>%  # drop na
      ...(location) %>%  # group
      ...(date == max(date)) %>%  # get last date
      ...(sum_total_vaccinations = sum(total_vaccinations)) %>%  # sum for each location
      ...(sum_total_vaccinations = sum(sum_total_vaccinations)) # sum for all
    
    format(x$sum_total_vaccinations, nsmall=0, big.mark=".")
  })
  
  output$slider_year <- ...({
    data <- vaccinations_df() %>%
      drop_na(total_vaccinations)  # remove na
    
    sliderInput(
      "slider_year", 
      "", 
      min=...(data$date),   # the first date
      max=...(data$date),   # last date
      value=max(data$date), 
      animate=animationOptions(loop = TRUE, interval = 1000)
    )
  })
  
  output$sum_total_vaccinations_by_country <- ...({
    data <- vaccinations_df() %>% 
      ...(total_vaccinations) %>%
      ...(date <= input$slider_year) %>% 
      ...(location) %>% 
      ...(date == max(date))
    # filter(vaccines == event_data("plotly_click", source="vaccines")$x) %>%
    
    data$hover <- with(
      data, paste(
        location, '<br>', 
        "Date", ..., "<br>",
        "Total vaccinations", ..., "<br>",
        "People Vaccinated", ..., "<br>",
        "People Fully Vaccinated", ..., "<br>"
        # "Vaccines", vaccines
      ))
    
    data %>% highlight_key(~iso_code) %>%
      plot_ly(
        source="sum_total_vaccinations_by_country", 
        type='choropleth', 
        locations=~iso_code, 
        z=~total_vaccinations, 
        # text=~country, 
        text=~hover,
        colorscale="Viridis"
      ) %>% 
      # https://plotly.com/python/templates/
      layout(
        paper_bgcolor = '#27293d', 
        font = list(
          color = '#bdbdbd'
        ),
        geo = list(
          showframe = FALSE,
          showcoastlines = FALSE,
          bgcolor = '#27293d'
        )
      ) %>%
      highlight(on = "plotly_click", off = "plotly_doubleclick")
  })
  
  output$sum_progress_vaccinations_daily <- renderPlotly({
    vaccinations_df() %>%
      ...(total_vaccinations) %>%  # remove na
      ...(date) %>%  # group
      ...(sum_total_vaccinations = sum(total_vaccinations)) %>% # summarize
      highlight_key(~date) %>% ##
      plot_ly(
        x = ~date, 
        y = ~sum_total_vaccinations,
        mode = "lines+markers"
      ) %>% 
      layout(
        height = 200,
        paper_bgcolor = '#222327', 
        plot_bgcolor = '#222327', 
        font = list(
          color = '#bdbdbd'
        )
      ) %>% 
      # add_trace(y = ~trace_1, name = 'trace 1', mode = 'lines+markers')  %>% 
      highlight(on = "plotly_click", off = "plotly_doubleclick")  ##
  })
  
  output$sum_progress_people_vaccinated_daily <- ...({
    vaccinations_df() %>%
      drop_na(people_vaccinated) %>%
      group_by(date) %>%
      summarize(sum_people_vaccinated = sum(people_vaccinated)) %>%
      highlight_key(~date) %>%
      plot_ly(
        x = ~date, 
        y = ~sum_people_vaccinated,
        mode = "lines+markers"
      ) %>% 
      layout(  ##
        height = 200,
        paper_bgcolor = '#222327', 
        plot_bgcolor = '#222327', 
        font = list(
          color = '#bdbdbd'
        )
      ) %>% 
      # add_trace(y = ~trace_1, name = 'trace 1', mode = 'lines+markers')  %>% 
      highlight(on = "plotly_click", off = "plotly_doubleclick")
  })
  
}